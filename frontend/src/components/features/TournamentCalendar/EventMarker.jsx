// src/components/features/TournamentCalendar/EventMarker.jsx

import React from 'react';
import { motion } from 'framer-motion';
import { Trophy, Star, Zap, Target } from 'lucide-react';

export function EventMarker({ tournament }) {
  const getEventStyles = () => {
    // Check the new database field first, then fall back to legacy settings_json
    const tournamentType = tournament.tournament_type || tournament.settings_json?.tournament_type || tournament.type;
    switch (tournamentType) {
      case '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π':
        return {
          Icon: Target,
          glassBg: 'bg-black/10 backdrop-blur-sm',
          colorOverlay: 'bg-deep-teal/15',
          glowColor: 'shadow-[0_0_12px_#38a3ab99]',
          borderColor: 'border-deep-teal',
          iconColor: 'text-deep-teal'
        };
      case '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π':
        return {
          Icon: Star,
          glassBg: 'bg-black/10 backdrop-blur-sm',
          colorOverlay: 'bg-gold-accent/15',
          glowColor: 'shadow-[0_0_12px_#D4AF3799]',
          borderColor: 'border-gold-accent',
          iconColor: 'text-gold-accent'
        };
      case '–§—Ä–∏—Ä–æ–ª–ª':
        return {
          Icon: Zap,
          glassBg: 'bg-black/10 backdrop-blur-sm',
          colorOverlay: 'bg-ips-red/15',
          glowColor: 'shadow-[0_0_12px_#ee234699]',
          borderColor: 'border-ips-red',
          iconColor: 'text-ips-red'
        };
      case '–†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π':
        return {
          Icon: Trophy,
          glassBg: 'bg-black/10 backdrop-blur-sm',
          colorOverlay: 'bg-gradient-to-br from-gold-accent/20 to-deep-teal/20',
          glowColor: 'shadow-[0_0_15px_#D4AF37b3]',
          borderColor: 'border-gold-accent',
          iconColor: 'text-gold-accent'
        };
      default:
        return {
          Icon: Target,
          glassBg: 'bg-black/10 backdrop-blur-sm',
          colorOverlay: 'bg-white/10',
          glowColor: 'shadow-md',
          borderColor: 'border-white/50',
          iconColor: 'text-white'
        };
    }
  };

  const { Icon, glassBg, colorOverlay, glowColor, borderColor, iconColor } = getEventStyles();
  const isMajorEvent = tournament.is_major;

  // Reduced icon sizes by half as requested
  const iconSizeClass = isMajorEvent ? 'w-3 h-3' : 'w-2 h-2';



  // üëá –ó–ê–ú–ï–ù–Ø–ï–ú –í–ï–°–¨ –ë–õ–û–ö RETURN –ù–ê –ù–û–í–´–ô üëá
  return (
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º React Fragment (<>), —á—Ç–æ–±—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    <>
      {/* === –ë–õ–û–ö ‚Ññ1: –ü–£–õ–¨–°–ê–¶–ò–Ø (–≤—Å–µ–≥–¥–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É) === */}
      {/* –≠—Ç–æ—Ç –±–ª–æ–∫ –±—É–¥–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π */}
      {isMajorEvent && (
        <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
          {/* –≠—Ç–∏ –¥–≤–∞ div'–∞ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ —Å–∞–º—É –∞–Ω–∏–º–∞—Ü–∏—é –ø—É–ª—å—Å–∞ */}
          <div className="absolute w-full h-full rounded-full bg-gold-accent/20 animate-ping-rare" />
          <div className={`absolute w-8 h-8 rounded-full ${colorOverlay} animate-pulse-rare`} />
        </div>
      )}

      {/* === –ë–õ–û–ö ‚Ññ2: –ò–ö–û–ù–ö–ê (–æ—Å—Ç–∞–µ—Ç—Å—è —Å–º–µ—â–µ–Ω–Ω–æ–π –≤–Ω–∏–∑) === */}
      <div className="absolute inset-0 flex items-end justify-center pb-3 pointer-events-none">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è glassmorphic –∏–∫–æ–Ω–∫–∞ */}
        <motion.div
          whileHover={{ scale: 1.15, rotate: 5 }}
          transition={{ type: 'spring', stiffness: 300, damping: 15 }}
          className={`relative z-10 p-2.5 rounded-full border-2 cursor-pointer pointer-events-auto overflow-hidden ${
            glassBg
          } ${
            glowColor
          } ${
            borderColor
          } ${isMajorEvent ? 'ring-2 ring-white/50 ring-offset-2 ring-offset-black/20' : ''}`}
        >
          {/* –¶–≤–µ—Ç–Ω–æ–π overlay –ø–æ–≤–µ—Ä—Ö "—Å—Ç–µ–∫–ª–∞" */}
          <div className={`absolute inset-0 ${colorOverlay}`} />

          {/* –ò–∫–æ–Ω–∫–∞ —Å —è—Ä–∫–∏–º —Ü–≤–µ—Ç–æ–º –∏ –æ–±–≤–æ–¥–∫–æ–π */}
          <Icon className={`relative z-10 ${iconSizeClass} ${iconColor} drop-shadow-lg stroke-2`} />
{/*           <Icon className={`relative z-10 w-4 h-4 ${iconColor} drop-shadow-lg stroke-2`} /> */}
        </motion.div>
      </div>
    </>
  );
}
