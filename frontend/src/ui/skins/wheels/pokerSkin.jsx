// frontend/src/ui/skins/wheels/pokerSkin.jsx
import React from 'react';
import { resolvePresets } from './pokerSkin.presets';

/**
 * Poker-chip skin (seamless, token-friendly).
 *
 * –ö–æ–ª—å—Ü–æ:
 *  ‚Ä¢ –£–∑o—Ä –∫–ª–∏–Ω—å–µ–≤ ‚Äî –æ–¥–∏–Ω repeating-conic-gradient (–±–µ—Å—à–æ–≤–Ω—ã–π).
 *  ‚Ä¢ –§–∞–∑–∞ —É–∑–æ—Ä–∞ = center + phaseDeg ‚àí stepF*stepDeg (–∂—ë—Å—Ç–∫–æ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –ª–µ–Ω—Ç–µ –∏–∫–æ–Ω–æ–∫).
 *  ‚Ä¢ –°—Ç–µ–∫–ª–æ ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ª–æ–π backdropFilter –ø–æ–¥ —É–∑–æ—Ä–æ–º.
 *  ‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ ‚Äî –≤—Ç–æ—Ä–æ–π repeating-conic –ø–æ–≤–µ—Ä—Ö (—Ç–æ–Ω–∫–∏–µ –ª–∏–Ω–∏–∏).
 *
 * –¶–µ–Ω—Ç—Ä:
 *  ‚Ä¢ 'bowl'  ‚Äî –º—è–≥–∫–∞—è –≤–æ–≥–Ω—É—Ç–∞—è —á–∞—à–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π).
 *  ‚Ä¢ 'bezel' ‚Äî –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô –î–ò–°–ö –∫–∞–∫ –±—ã–ª + –ü–û–î –ù–ò–ú –±–æ–ª—å—à–æ–π –¥–∏—Å–∫ —Å inset-—Ç–µ–Ω—è–º–∏ (–±–µ–∑ ¬´–∫—Ä–æ–º–æ–∫¬ª).
 *
 * –ê–∫—Ç–∏–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞:
 *  ‚Ä¢ –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∑–æ–ª–æ—Ç–∞—è –ø–æ–¥–ª–æ–∂–∫–∞-¬´–∫–æ–ª–µ—á–∫–æ¬ª + –º—è–≥–∫–∏–π glow + –º–∞—Å—à—Ç–∞–±.
 *  ‚Ä¢ –¶–≤–µ—Ç –≥–ª–∏—Ñ–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –Ω–∞ –∑–æ–ª–æ—Ç–æ–π –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–ª—ã–º.
 */
export const pokerSkin = {
  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // –°–õ–û–ò –î–û –ò–ö–û–ù–û–ö
  beforeIcons(geom, props = {}) {
    const { size, center, stepDeg, stepF } = geom;

    // –ü—Ä–µ—Å–µ—Ç—ã
    const { palette, center: centerPreset } = resolvePresets(props);

    // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ö–û–ù–¢–†–û–õ–ò (—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏) ‚Äî –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–ø—Å—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    const {
      // üß≠ –ì–µ–æ–º–µ—Ç—Ä–∏—è –∫–æ–ª—å—Ü–∞
      rimWidth = 26,           // —Ç–æ–ª—â–∏–Ω–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –æ–±–æ–¥–∞ (px)
      gapDeg = 2,              // —à–∏—Ä–∏–Ω–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –º–µ–∂–¥—É –∫–ª–∏–Ω—å—è–º–∏ (deg)
      visualWedgeDeg = null,   // —à–∏—Ä–∏–Ω–∞ ¬´–≤–∏–¥–∏–º–æ–≥–æ¬ª –∫–ª–∏–Ω–∞ (deg); –µ—Å–ª–∏ null ‚Äî = stepDeg
      phaseDeg = 0,            // –ø–æ–¥—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–∑—ã —É–∑–æ—Ä–∞ (—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∏ –∫–ª–∏–Ω–∞)
      overlapDeg = 0.0,        // –Ω–µ–±–æ–ª—å—à–æ–µ ¬´–Ω–∞–ª–µ–∑–∞–Ω–∏–µ¬ª –∫–ª–∏–Ω–∞ –Ω–∞ —Å–æ—Å–µ–¥–∞ –ø—Ä–æ—Ç–∏–≤ —â–µ–ª–µ–π (deg)

      // ü™ü –°—Ç–µ–∫–ª–æ (–ø–æ–¥ —É–∑–æ—Ä–æ–º; –≤–ª–∏—è–µ—Ç –Ω–∞ —Ñ–æ–Ω –ø–æ–¥ –∫–æ–ª—å—Ü–æ–º)
      blurPx = 8,
      saturate = 1.12,
      brighten = 1.04,

      // ‚îÜ –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –∫–ª–∏–Ω—å–µ–≤
      showGaps = true,
      gapAlpha = 0.28,

      // ‚ö™ –¶–µ–Ω—Ç—Ä (–≤–∞—Ä–∏–∞–Ω—Ç –≤–∏–∑—É–∞–ª–∞)
      centerStyle = centerPreset.style,                    // 'bowl' | 'bezel'
      cupInnerR = Math.round(size * centerPreset.innerR),  // —Ä–∞–¥–∏—É—Å —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞ (px)
      cupRimThicknessPx = Math.max(2, Math.round(size * centerPreset.rimThickness)), // –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ bezel

      // üé® –ü–∞–ª–∏—Ç—Ä–∞ –∫–æ–ª—å—Ü–∞ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ª—é–±—ã–µ –∏–∑ –ø—Ä–µ—Å–µ—Ç–∞)
      red     = palette.red,
      ivory   = palette.ivory,
      tintAlphaRed   = palette.tintAlphaRed,
      tintAlphaIvory = palette.tintAlphaIvory,
      baseDark  = palette.baseDark,   // –±–∞–∑–∞ –ø–æ–¥ —Å—Ç–µ–∫–ª–æ–º
      baseDark2 = palette.baseDark2,

      // ‚Äî –ù–ê–°–¢–†–û–ô–ö–ò –ü–û–î–õ–û–ñ–ö–ò –ü–û–î –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ú –î–ò–°–ö–û–ú (—Ç–æ–ª—å–∫–æ –¥–ª—è 'bezel') ‚Äî

      underDiskEnabled = true,   // —Ä–∏—Å–æ–≤–∞—Ç—å –ª–∏ –∫—Ä—É–≥-–ø–æ–¥–ª–æ–∂–∫—É –ø–æ–¥ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º –¥–∏—Å–∫–æ–º
      underDiskExtraPx = 14,     // —à–∏—Ä–∏–Ω–∞ –≤–∏–¥–∏–º–æ–π ¬´–ø–æ–ª–∫–∏¬ª –≤–æ–∫—Ä—É–≥ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞ (px)
      underDiskFill = null,      // –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å (—Å–ø–ª–æ—à–Ω–æ–π —Ü–≤–µ—Ç –∏–ª–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç)
      underDiskMatch = 'none',   // 'none' | 'red' | 'ivory' ‚Äî –≤–∑—è—Ç—å –æ—Ç—Ç–µ–Ω–æ–∫, –∫–∞–∫ —É –∫–ª–∏–Ω—å–µ–≤ (—á–µ—Ä–µ–∑ —Ç–µ –∂–µ –∞–ª—å—Ñ—ã)
      underDiskBlurPx = 12,      // —Ä–∞–¥–∏—É—Å —Ä–∞–∑–º—ã—Ç–∏—è inset-—Ç–µ–Ω–µ–π (px)
      underDiskInsetDark = 0.55, // —Ç—ë–º–Ω–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ç–µ–Ω—å (alpha 0..1)
      underDiskInsetLight = 0.22,// —Ç–æ–Ω–∫–∏–π —Å–≤–µ—Ç–ª—ã–π –∫–∞–Ω—Ç –∏–∑–Ω—É—Ç—Ä–∏ (alpha 0..1)


      underDiskBrightness = 1.0, // 0.7..1.3 ‚Äî —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ç–µ–º–Ω–µ–µ/—Å–≤–µ—Ç–ª–µ–µ –Ω–∏–∂–Ω–µ–≥–æ –¥–∏—Å–∫–∞

      // DROP-—Ç–µ–Ω–∏ –û–¢ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞ –ù–ê –Ω–∏–∂–Ω–∏–π (–≤ —Ä–µ–∂–∏–º–µ 'bezel')
      centerDropDarkAlpha = 0.28,
      centerDropDarkBlur  = 16,  // px
      centerDropLightAlpha = 0.10,
      centerDropLightBlur  = 8,  // px

      // –ö–∞–Ω—Ç —É —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞ (—Ç–æ–Ω–∫–∏–π —Å–≤–µ—Ç–ª—ã–π ¬´–æ–±–æ–¥–æ–∫¬ª –∏–∑–Ω—É—Ç—Ä–∏)
      centerInsetLight = 0.18,   // 0..1 (0 ‚Äî –≤—ã–∫–ª)

      // –ò–Ω–≤–µ—Ä—Å–∏—è —à–µ–π–¥–∏–Ω–≥–∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞ (—Å–≤–µ—Ç–ª—ã–µ –∫—Ä–∞—è, —Ç—ë–º–Ω—ã–π —Ü–µ–Ω—Ç—Ä)
      centerInvertShading = false,





      // ‚ú® –ê–∫—Ç–∏–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞ (–≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç)
      activeIcon = {
        ringEnabled: true,
        ringAlpha: 0.18,
        ringRadiusPx: 20,
        ringSoftPx: 10,
        scale: 1.2,
        glow: 0.30,
        insetGlow: 0.12,
        glyph: 'inherit',
        activeGlyphColor: 'var(--gold, #D4AF37)',

        // ‚îÄ‚îÄ –Ω–æ–≤–∞—è ¬´–∫–∞–ø—Å—É–ª–∞¬ª –∏–∑ –∑–æ–ª–æ—Ç–æ–≥–æ —Å—Ç–µ–∫–ª–∞
        capEnabled: true,
        capTint: 'var(--gold, #D4AF37)',
        capDiameterPx: null,     // –µ—Å–ª–∏ null ‚Äî –≤–æ–∑—å–º—ë–º –∏–∑ chipSize * 1.55
        capFillAlpha: 0.22,      // –ø–ª–æ—Ç–Ω–æ—Å—Ç—å ¬´—Å—Ç–µ–∫–ª–∞¬ª
        capHighlightAlpha: 0.14, // –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–ª–∏–∫
        capHighlightBias: 0.46,  // 0..1 ‚Äî —Å–º–µ—â–µ–Ω–∏–µ –±–ª–∏–∫–∞ –∫ –≤–µ—Ä—Ö—É
        capBorderAlpha: 0.28,    // —Ç–æ–Ω–∫–∏–π –∫–æ–Ω—Ç—É—Ä (hairline)
        capGlowAlpha: 0.18,      // –≤–Ω–µ—à–Ω–µ–µ –º—è–≥–∫–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ –∫–∞–ø—Å—É–ª—ã
      },
    } = props;
    // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ

    const outerR = size / 2;
    const innerR = Math.max(0, outerR - rimWidth);

    const wedgeBase = (visualWedgeDeg ?? stepDeg);
    const wedgeDeg  = Math.max(0, wedgeBase - gapDeg);
    const period    = 2 * wedgeBase; // –∫—Ä–∞—Å–Ω—ã–π + —Å–≤–µ—Ç–ª—ã–π
    const phase     = center + phaseDeg - stepF * stepDeg;

    const withAlpha = (c, a) => `color-mix(in oklab, ${c} ${Math.round(a * 100)}%, transparent)`;
    const redTint   = withAlpha(red,   tintAlphaRed);
    const ivoryTint = withAlpha(ivory, tintAlphaIvory);

    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –≤—Å—ë —Ä–∏—Å—É–µ–º –¢–û–õ–¨–ö–û –Ω–∞ –∫–æ–ª—å—Ü–µ
    const ringMask = `radial-gradient(circle at 50% 50%, transparent ${innerR - 0.5}px, black ${innerR}px)`;

    // –ë–∞–∑–∞ –ø–æ–¥ —Å—Ç–µ–∫–ª–æ–º
    const baseLayer = (
      <div
        key="disk:base"
        className="absolute inset-0 rounded-full pointer-events-none"
        style={{
          background: `radial-gradient(80% 80% at 50% 42%, ${baseDark} 0%, ${baseDark2} 72%, #000 100%)`,
          boxShadow: '0 10px 28px rgba(0,0,0,0.35)',
        }}
      />
    );

    // –°—Ç–µ–∫–ª–æ
    const glassLayer = (
      <div
        key="ring:glass"
        className="absolute inset-0 rounded-full pointer-events-none"
        style={{
          WebkitMask: ringMask,
          mask: ringMask,
          backdropFilter: `blur(${blurPx}px) saturate(${saturate}) brightness(${brighten})`,
        }}
      />
    );

    // –£–∑o—Ä –∫–ª–∏–Ω—å–µ–≤ (–±–µ—Å—à–æ–≤–Ω—ã–π)
    const tintLayer = (
      <div
        key="ring:tint"
        className="absolute inset-0 rounded-full pointer-events-none"
        style={{
          WebkitMask: ringMask,
          mask: ringMask,
          background: `
            repeating-conic-gradient(
              from ${phase - overlapDeg}deg,
              ${redTint} 0deg,
              ${redTint} ${wedgeDeg + overlapDeg}deg,
              transparent ${wedgeDeg + overlapDeg}deg,
              transparent ${wedgeDeg + gapDeg - overlapDeg}deg,
              ${ivoryTint} ${wedgeDeg + gapDeg - overlapDeg}deg,
              ${ivoryTint} ${wedgeDeg + gapDeg + wedgeDeg}deg,
              transparent ${wedgeDeg + gapDeg + wedgeDeg}deg,
              transparent ${period}deg
            )
          `,
        }}
      />
    );

    // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
    const gapsLayer = showGaps ? (
      <div
        key="ring:gaps"
        className="absolute inset-0 rounded-full pointer-events-none"
        style={{
          WebkitMask: ringMask,
          mask: ringMask,
          background: `
            repeating-conic-gradient(
              from ${phase}deg,
              transparent 0deg,
              transparent ${wedgeDeg}deg,
              rgba(255,255,255,${gapAlpha}) ${wedgeDeg}deg,
              rgba(255,255,255,${gapAlpha}) ${wedgeDeg + gapDeg}deg,
              transparent ${wedgeDeg + gapDeg}deg,
              transparent ${wedgeDeg + gapDeg + wedgeDeg}deg,
              rgba(255,255,255,${gapAlpha}) ${wedgeDeg + gapDeg + wedgeDeg}deg,
              rgba(255,255,255,${gapAlpha}) ${period}deg
            )
          `,
        }}
      />
    ) : null;

    // –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ç–µ–Ω—å –ø–æ –æ–±–æ–¥—É
    const innerShadow = (
      <div
        key="ring:inner-shadow"
        className="absolute inset-0 rounded-full pointer-events-none"
        style={{
          WebkitMask: ringMask,
          mask: ringMask,
          boxShadow: 'inset 0 10px 24px rgba(0,0,0,0.45)',
        }}
      />
    );

    // –¶–µ–Ω—Ç—Ä
    const centerLayers = (() => {
      const inner = cupInnerR;                // —Ä–∞–¥–∏—É—Å —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞
      const underR = inner + Math.max(0, underDiskExtraPx); // —Ä–∞–¥–∏—É—Å –ø–æ–¥–ª–æ–∂–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è 'bezel')

      if (centerStyle === 'bezel') {
        return (
          <div key="center:bezel" className="absolute inset-0 pointer-events-none">


            {/* 1) –ü–û–î–õ–û–ñ–ö–ê ‚Äî –±–û–ª—å—à–∏–π –¥–∏—Å–∫ —Å —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–º–∏ inset-—Ç–µ–Ω—è–º–∏ (–±–µ–∑ –º–∞—Å–æ–∫/–±–ª–µ–Ω–¥–æ–≤) */}
            {underDiskEnabled && (() => {
              const grow = Math.max(0, underDiskExtraPx);
              const w = (inner + grow) * 2;
              const h = w;

              // –∫–∞–∫ –∫—Ä–∞—Å–Ω—ã–π/ivory –∫–ª–∏–Ω ¬´—á–µ—Ä–µ–∑ —Å—Ç–µ–∫–ª–æ¬ª ‚Äî –±–µ—Ä—ë–º —Ç–µ –∂–µ —Ç–∏–Ω—ã, —á—Ç–æ –∏ –∫–ª–∏–Ω—å—è
              const matched = underDiskMatch === 'red'   ? redTint
                            : underDiskMatch === 'ivory' ? ivoryTint
                            : null;

              // –∏—Ç–æ–≥–æ–≤–∞—è –∑–∞–ª–∏–≤–∫–∞ –ø–æ–¥–ª–æ–∂–∫–∏:
              // 1) –µ—Å–ª–∏ –∑–∞–¥–∞–Ω underDiskFill ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å (—Ü–≤–µ—Ç/–≥—Ä–∞–¥–∏–µ–Ω—Ç);
              // 2) –µ—Å–ª–∏ underDiskMatch ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º matched-—Ü–≤–µ—Ç (–ø–ª—é—Å –ª—ë–≥–∫–∞—è –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—è –∫ —Ç—ë–º–Ω–æ–º—É –ø–æ –∫—Ä–∞—é);
              // 3) –∏–Ω–∞—á–µ ‚Äî –Ω–µ–±—Ä–æ—Å–∫–∏–π —Ç–∏—Ç–∞–Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç –∏–∑ –ø—Ä–µ—Å–µ—Ç–∞.
              const baseUnder =
                underDiskFill ? underDiskFill
                : matched
                ? `radial-gradient(75% 75% at 50% 50%,
                    ${matched} 0%,
                    color-mix(in oklab, ${matched} 70%, black) 100%)`
                : (palette?.underDiskFill ?? `radial-gradient(75% 75% at 50% 50%,
                    color-mix(in oklab, var(--bg-0, #0B0D12) 86%, white 14%) 0%,
                    color-mix(in oklab, var(--bg-0, #0B0D12) 76%, white 24%) 45%,
                    color-mix(in oklab, var(--bg-0, #0B0D12) 58%, black 42%) 100%)`);

              return (
                <div
                  className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full"
                  style={{
                    width: w, height: h,

                    background: baseUnder,          // ‚Üê —Å–ø–ª–æ—à–Ω–æ–π —Ü–≤–µ—Ç –∏–ª–∏ ¬´—Å–æ–≤–ø–∞–¥–∞—é—â–∏–π¬ª —Å –∫–ª–∏–Ω—å—è–º–∏

                    filter: `brightness(${underDiskBrightness})`,

                    // –¥–≤–µ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–µ inset-—Ç–µ–Ω–∏: —Ç—ë–º–Ω–∞—è ¬´–≤ –≥–ª—É–±–∏–Ω—É¬ª –∏ —Ç–æ–Ω–∫–∏–π —Å–≤–µ—Ç–ª—ã–π –∫–∞–Ω—Ç
                    boxShadow: `
                      inset 0 0 ${underDiskBlurPx}px rgba(0,0,0,${underDiskInsetDark}),
                      inset 0 0 0 1px rgba(255,255,255,${underDiskInsetLight})
                    `,
                  }}
                />
              );
            })()}



            {/* 2) –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô –î–ò–°–ö ‚Äî –∫–∞–∫ –±—ã–ª (—Ç–∏—Ç–∞–Ω–æ–≤—ã–π). –ë–ï–ó –≤–Ω–µ—à–Ω–µ–π —Ç–µ–Ω–∏ (drop) –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ */}

            <div
              className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full"
              style={{
                width: inner * 2,
                height: inner * 2,
                // –í–ê–ñ–ù–û: –±–µ–∑ rgba/–∞–ª—å—Ñ—ã ‚Äî —á–∏—Å—Ç–æ –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç



                background: centerInvertShading
                  ? `radial-gradient(85% 85% at 50% 50%,
                       color-mix(in oklab, var(--bg-0, #0B0D12) 68%, black 32%) 0%,
                       color-mix(in oklab, var(--bg-0, #0B0D12) 80%, white 20%) 100%
                     )` // —Å–≤–µ—Ç –ø–æ –∫—Ä–∞—è–º, —Ç–µ–º–Ω–µ–µ –∫ —Ü–µ–Ω—Ç—Ä—É
                  : `radial-gradient(75% 75% at 50% 45%,
                       color-mix(in oklab, var(--bg-0, #0B0D12) 84%, white 16%) 0%,
                       color-mix(in oklab, var(--bg-0, #0B0D12) 90%, white 10%) 45%,
                       color-mix(in oklab, var(--bg-0, #0B0D12) 65%, black 35%) 100%
                     )`,
                // –í–ù–ï–®–ù–ò–ï DROP-–¢–ï–ù–ò (–ø–∞–¥–∞—é—Ç –Ω–∞ –Ω–∏–∂–Ω–∏–π –¥–∏—Å–∫) + –¢–û–ù–ö–ò–ô –°–í–ï–¢–õ–´–ô –ö–ê–ù–¢ –∏–∑–Ω—É—Ç—Ä–∏
                boxShadow: `
                  0 0 ${centerDropDarkBlur}px rgba(0,0,0,${centerDropDarkAlpha}),
                  0 0 ${centerDropLightBlur}px rgba(255,255,255,${centerDropLightAlpha}),
                  inset 0 0 0 1px rgba(255,255,255,${centerInsetLight}),
                  inset 0 8px 18px rgba(0,0,0,0.35)
                `,

                // –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–º–µ—à–∏–≤–∞–Ω–∏—è
                mixBlendMode: 'normal'
              }}
            />
          </div>
        );
      }

      // bowl ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
      const rimSize = cupRimThicknessPx;
      const rimOuter = inner + rimSize;
      const rimMask = `radial-gradient(circle at 50% 50%,
        transparent ${inner - 0.5}px,
        black ${inner}px,
        black ${rimOuter}px,
        transparent ${rimOuter + 0.5}px)`;

      return (
        <div key="center:bowl" className="absolute inset-0 pointer-events-none">
          {/* –°–≤–µ—Ç–ª–∞—è –∫—Ä–æ–º–∫–∞ */}
          <div
            className="absolute inset-0 rounded-full"
            style={{
              WebkitMask: rimMask,
              mask: rimMask,
              background: `linear-gradient(180deg, rgba(255,255,255,0.9), rgba(255,255,255,0.5))`,
              opacity: 0.9,
            }}
          />
          {/* Halo –Ω–∞–¥ –∫—Ä–æ–º–∫–æ–π */}
          <div
            className="absolute inset-0 rounded-full"
            style={{
              WebkitMask: `radial-gradient(circle at 50% 50%,
                transparent ${inner - 2}px,
                rgba(255,255,255,0.8) ${inner + 2}px,
                transparent ${rimOuter + 8}px)`,
              mask: `radial-gradient(circle at 50% 50%,
                transparent ${inner - 2}px,
                rgba(255,255,255,0.8) ${inner + 2}px,
                transparent ${rimOuter + 8}px)`,
            }}
          />
          {/* –°–µ—Ä–¥—Ü–µ–≤–∏–Ω–∞ ‚Äî –≤–æ–≥–Ω—É—Ç–∞—è */}
          <div
            className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full"
            style={{
              width: inner * 2,
              height: inner * 2,
              background:
                'radial-gradient(75% 75% at 50% 40%, rgba(255,255,255,0.06) 0%, rgba(255,255,255,0.02) 35%, rgba(0,0,0,0.65) 100%)',
              boxShadow: 'inset 0 8px 20px rgba(0,0,0,0.55)',
            }}
          />
        </div>
      );
    })();

    return (
      <div className="absolute inset-0 rounded-full pointer-events-none">
        {baseLayer}
        {glassLayer}
        {tintLayer}
        {gapsLayer}
        {innerShadow}
        {centerLayers}
      </div>
    );
  },

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // –°–õ–û–ò –ü–û–°–õ–ï –ò–ö–û–ù–û–ö (—Å–µ–π—á–∞—Å –Ω–µ –Ω—É–∂–Ω—ã)
  afterIcons() {
    return null;
  },

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // –û–ë–Å–†–¢–ö–ê –ü–û–î–ü–ò–°–ò (–Ω–∞–¥–ø–∏—Å—å –ø–æ–≤–µ—Ä—Ö —Ü–µ–Ω—Ç—Ä–∞)
  CenterLabelWrap(_g, _p, children) {
    return (
      <div className="relative z-[2] text-[--fg-strong] font-semibold tracking-wide font-ui-role">
        {children}
      </div>
    );
  },

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // –î–ï–ö–û–† –ê–ö–¢–ò–í–ù–û–ô –ò–ö–û–ù–ö–ò
  decorateIcon(node, { isActive, geometry, skinProps }) {
    const a = skinProps?.activeIcon || {};
    const {

      // NEW: —Å–ø–ª–æ—à–Ω–∞—è –ø–æ–¥–ª–æ–∂–∫–∞ –ø–æ–¥ –∏–∫–æ–Ω–∫–æ–π
      fillEnabled = true,
      fillAlpha = 0.02,            // 0..1 ‚Äî –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å ¬´—Å—Ç–µ–∫–ª–∞¬ª
      fillRadiusPx = 14,           // —Ä–∞–¥–∏—É—Å –ø–æ–¥–ª–æ–∂–∫–∏
      // NEW: —Ç–æ–Ω–∫–∏–π –∫–æ–Ω—Ç—É—Ä –ø–æ–≤–µ—Ä—Ö –ø–æ–¥–ª–æ–∂–∫–∏
      strokeEnabled = true,
      strokeAlpha = 0.03,
      strokeWidthPx = 0.5,
      // Halo-–∫–æ–ª—å—Ü–æ (–º—è–≥–∫–æ–µ –≤–Ω–µ—à–Ω–µ–µ —Å–∏—è–Ω–∏–µ)
      ringEnabled = true,
      ringAlpha = 0.02,
      ringRadiusPx = 16,
      ringSoftPx = 1,
      // –¢–µ–∫—É—â–∏–π –º–∞—Å—à—Ç–∞–± –∞–∫—Ç–∏–≤–Ω–æ–π –∏–∫–æ–Ω–∫–∏
      scale = 1.2,
      // –°–≤–µ—Å—Ç–∏ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π glow, —á—Ç–æ–±—ã –Ω–µ ¬´–≤—ã–∂–∏–≥–∞–ª¬ª –≥–ª–∏—Ñ
      glow = 0.1,
      insetGlow =0.1,
      // –¶–≤–µ—Ç –≥–ª–∏—Ñ–∞
      glyph = 'inherit',
      activeGlyphColor = 'var(--gold, #D4AF37)',


      // –∫–∞–ø—Å—É–ª–∞
      capEnabled = true,
      capTint = 'var(--gold, #D4AF37)',
      capDiameterPx = null,
      capFillAlpha = .2,
      capHighlightAlpha = 0.3,
      capHighlightBias = .12,
      capBorderAlpha = 0.04,
      capGlowAlpha = 0.04,
    } = a;

    if (!isActive) return node;

    const gold = 'var(--gold, #D4AF37)';
    const fillDisk = fillEnabled ? (
      <div
        className="absolute inset-0 pointer-events-none"
        aria-hidden
      >
        <div
          className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full"
          style={{
            width: fillRadiusPx * 2,
            height: fillRadiusPx * 2,
            // –ü–ª–æ—Ç–Ω–∞—è ¬´—Å—Ç–µ–∫–ª—è–Ω–Ω–∞—è¬ª –∑–∞–ª–∏–≤–∫–∞ –±–µ–∑ —è—Ä–∫–æ–≥–æ —Ö–æ—Ç—Å–ø–æ—Ç–∞
            background: `
              radial-gradient(
                circle at 50% 45%,
                color-mix(in oklab, ${gold} 86%, black 14%) 0%,
                color-mix(in oklab, ${gold} 78%, black 22%) 100%
              )`,
            opacity: fillAlpha,
          }}
        />
        {strokeEnabled && (
          <div
            className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full"
            style={{
              width: fillRadiusPx * 2,
              height: fillRadiusPx * 2,
              boxShadow: `inset 0 0 0 ${strokeWidthPx}px rgba(212,175,55,${strokeAlpha})`,
            }}
          />
        )}
      </div>
    ) : null;



    const coloredNode =
      glyph === 'gold' || glyph === 'custom'
        ? React.cloneElement(node, {
            style: {
              ...(node.props?.style || {}),
              color: glyph === 'gold' ? 'var(--gold, #D4AF37)' : activeGlyphColor,
            },
          })
        : node;

    const ring = ringEnabled ? (
      <div
        className="absolute inset-0 pointer-events-none"
        style={{ transform: 'translateZ(0)' }}
        aria-hidden
      >
        <div
          className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full"
          style={{
            width: ringRadiusPx * 2,
            height: ringRadiusPx * 2,
            background: `radial-gradient(circle, rgba(212,175,55,${ringAlpha}) 0%, rgba(212,175,55,0) ${ringSoftPx}px 100%)`,
          }}
        />
      </div>
    ) : null;


    // ‚îÄ‚îÄ –ö–†–£–ì–õ–ê–Ø –ö–ê–ü–°–£–õ–ê –ò–ó ¬´–ó–û–õ–û–¢–û–ì–û –°–¢–ï–ö–õ–ê¬ª
    // –¥–∏–∞–º–µ—Ç—Ä: –∏–∑ –ø—Ä–æ–ø—Å–æ–≤ –∏–ª–∏ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ–º—Å—è –æ—Ç –≥–µ–æ–º–µ—Ç—Ä–∏–∏ —Å–ª–æ—Ç–∞ (chipSize * 1.55)
    const slot = Math.max(12, geometry?.chipSize ?? 25);
    const capD = Math.round(
      (typeof capDiameterPx === 'number' && capDiameterPx > 0)
        ? capDiameterPx
        : slot * 1.55
    );

    const capLayer = capEnabled ? (
      <div
        className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full pointer-events-none"
        style={{
          width: capD,
          height: capD,
          // –¥–≤–∞ —Ä–∞–¥–∏–∞–ª—å–Ω—ã—Ö: –±–∞–∑–æ–≤–∞—è ¬´–∑–æ–ª–æ—Ç–∞—è¬ª –≥–ª—É–±–∏–Ω–∞ + –≤–µ—Ä—Ö–Ω–∏–π –±–ª–∏–∫
          background: `
            radial-gradient(65% 65% at 50% ${Math.round(capHighlightBias * 100)}%,
              rgba(255,255,255,${capHighlightAlpha}) 0%,
              rgba(255,255,255,0) 60%),
            radial-gradient(circle at 50% 50%,
              color-mix(in oklab, ${capTint} ${Math.round(capFillAlpha * 100)}%, transparent) 0%,
              color-mix(in oklab, ${capTint} 0%, transparent) 100%)
          `,
          // —Ç–æ–Ω–∫–∏–π –∫–æ–Ω—Ç—É—Ä-—Ö–µ–π—Ä–ª–∞–π–Ω + –º—è–≥–∫–æ–µ –≤–Ω–µ—à–Ω–µ–µ ¬´—Å—Ç–µ–∫–ª—è–Ω–Ω–æ–µ¬ª —Å–∏—è–Ω–∏–µ
          boxShadow: `
            0 0 0 var(--hairline, 0.5px) rgba(255,255,255,${capBorderAlpha}),
            0 0 14px rgba(212,175,55,${capGlowAlpha})
          `,
          // –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–º–µ—à–∏–≤–∞–Ω–∏—è —Å –Ω–∏–∑–ª–µ–∂–∞—â–∏–º–∏ —Å–ª–æ–Ω–∞–º–∏ —É–∑–æ—Ä–∞
          mixBlendMode: 'normal',
        }}
        aria-hidden
      />
    ) : null;


    return (
      <div
        className="relative rounded-full"
        style={{
          transform: `scale(${scale})`,
          boxShadow: `
            0 0 10px rgba(212,175,55,${glow}),
            inset 0 0 6px rgba(255,255,255,${insetGlow})
          `,
          transition: 'transform 160ms ease, box-shadow 160ms ease',
        }}
      >
        {fillDisk}
        {ring /* –≤–Ω–µ—à–Ω–µ–µ ¬´–∫–æ–ª—å—Ü–æ¬ª-–æ—Ä–µ–æ–ª */}
        {capLayer /* –Ω–æ–≤–∞—è —Å—Ç–µ–∫–ª—è–Ω–Ω–∞—è –∫–∞–ø—Å—É–ª–∞ */}
        {coloredNode}
      </div>
    );
  },
};
